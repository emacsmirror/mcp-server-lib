name: Emacs Lisp CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

permissions: {}

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        emacs_version:
          - "snapshot"
          - "30.1"
          - "29.4"
          - "28.2"
        include:
        - os: ubuntu-latest
          emacs_version: "27.2"

    permissions:
      contents: read
      packages: read
      # To report GitHub Actions status checks
      statuses: write

    steps:
      - uses: actions/checkout@v4

      - name: Set up Emacs
        uses: purcell/setup-emacs@master
        with:
          version: ${{ matrix.emacs_version }}

      - name: Install dependencies
        run: |
          emacs -Q --batch \
                --eval "(require 'package)" \
                --eval "(add-to-list 'package-archives '(\"melpa-stable\" . \"https://stable.melpa.org/packages/\") t)" \
                --eval "(package-initialize)" \
                --eval "(package-refresh-contents)" \
                --eval "(package-install 'elisp-lint)" \
                --eval "(package-install 'package-lint)" \
                --eval "(package-install 'dash)"

      - name: elisp-lint
        run: |
          emacs -Q --batch \
                --eval "(package-initialize)" \
                --eval "(require 'elisp-lint)" \
                --eval "(dolist (file (directory-files \".\" nil \"\\\\.el$\"))
                          (let ((elisp-lint-ignored-validators
                                 (if (string-match-p \"commands\" file)
                                     '(\"package-lint\")
                                   nil)))
                            (elisp-lint-file file)))"

      - name: Run tests
        run: |
          emacs -Q --batch -L . -l mcp-server-lib.el -l mcp-server-lib-test.el \
                --eval "(ert-run-tests-batch-and-exit)"
